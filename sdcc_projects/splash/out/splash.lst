                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module splash
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _copyToVRAM
                             13 	.globl _color
                             14 	.globl _screen
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;src/splash.c:20: void main(void) {
                             47 ;	---------------------------------
                             48 ; Function main
                             49 ; ---------------------------------
   0000                      50 _main::
                             51 ;src/splash.c:24: int scr = (int)(data);
   0000 01r00r00      [10]   52 	ld	bc,#_data+0
                             53 ;src/splash.c:25: scr = scr + 2;
   0003 03            [ 6]   54 	inc	bc
   0004 03            [ 6]   55 	inc	bc
                             56 ;src/splash.c:26: screen(2);
   0005 C5            [11]   57 	push	bc
   0006 3E 02         [ 7]   58 	ld	a,#0x02
   0008 F5            [11]   59 	push	af
   0009 33            [ 6]   60 	inc	sp
   000A CDr00r00      [17]   61 	call	_screen
   000D 33            [ 6]   62 	inc	sp
   000E 21 01 01      [10]   63 	ld	hl,#0x0101
   0011 E5            [11]   64 	push	hl
   0012 3E 0F         [ 7]   65 	ld	a,#0x0f
   0014 F5            [11]   66 	push	af
   0015 33            [ 6]   67 	inc	sp
   0016 CDr00r00      [17]   68 	call	_color
   0019 F1            [10]   69 	pop	af
   001A 33            [ 6]   70 	inc	sp
   001B C1            [10]   71 	pop	bc
                             72 ;src/splash.c:28: copyToVRAM((int)scr, 0x2000, a);
   001C C5            [11]   73 	push	bc
   001D 21 00 18      [10]   74 	ld	hl,#0x1800
   0020 E5            [11]   75 	push	hl
   0021 26 20         [ 7]   76 	ld	h, #0x20
   0023 E5            [11]   77 	push	hl
   0024 C5            [11]   78 	push	bc
   0025 CDr00r00      [17]   79 	call	_copyToVRAM
   0028 21 06 00      [10]   80 	ld	hl,#6
   002B 39            [11]   81 	add	hl,sp
   002C F9            [ 6]   82 	ld	sp,hl
   002D C1            [10]   83 	pop	bc
                             84 ;src/splash.c:29: copyToVRAM((int)(scr+a), 0x000, a);
   002E 21 00 18      [10]   85 	ld	hl,#0x1800
   0031 09            [11]   86 	add	hl,bc
   0032 01 00 18      [10]   87 	ld	bc,#0x1800
   0035 C5            [11]   88 	push	bc
   0036 01 00 00      [10]   89 	ld	bc,#0x0000
   0039 C5            [11]   90 	push	bc
   003A E5            [11]   91 	push	hl
   003B CDr00r00      [17]   92 	call	_copyToVRAM
   003E 21 06 00      [10]   93 	ld	hl,#6
   0041 39            [11]   94 	add	hl,sp
   0042 F9            [ 6]   95 	ld	sp,hl
                             96 ;src/splash.c:31: getch();
   0043 CD 9F 00      [17]   97 	call	0x9f
                             98 ;src/splash.c:33: __asm__ ("call 0");
   0046 CD 00 00      [17]   99 	call	0
                            100 ;src/splash.c:34: return;
   0049 C9            [10]  101 	ret
                            102 	.area _CODE
                            103 	.area _INITIALIZER
                            104 	.area _CABS (ABS)
